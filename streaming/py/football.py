# -*- coding: utf-8 -*-
"""Football.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/13fKJf6ifio3__bDshf8-H7cMogizex54
"""

import pandas as pd
from pandas import DataFrame

df = pd.read_csv ('Football_Euro.csv')

print(df['Goals'])

df.shape

#3. How many team participated in the Euro Cup?
print("No of teams Participated in the Eurocup: ",df.shape[0])

#4. Columns
df.shape[1]

#5. View only the columns Team, Yellow Cards and Red Cards and assign them to a dataframe called discipline. 
discipline = df[['Team', 'Yellow Cards', 'Red Cards']]
print (discipline)

#6. Sort the teams by Red Cards, then to Yellow Cards. 
discipline.sort_values(by=['Red Cards', 'Yellow Cards'], inplace = True)
print (discipline)

#7. Calculate the mean Yellow Cards given per Team. 
print("Mean yellow cards: ",discipline['Yellow Cards'].mean())



#9. List teams that scored more than 6 goals. 
print("\n\nTeams with more than 6 Goals:\n",df[df['Goals'] > 6])

#10. Select the teams that start with G.  
print("\n\nTeams Starting with G:\n",df[df.Team.str.startswith('G')])

#11. Select the first 7 columns.  
print(df.head(7))

#12. Select all columns except the last 3.  
print(df.iloc[:,:-3])

#13. Present only the Shooting Accuracy from England, Italy and Russia 
print(df.loc[df.Team.isin(['England', 'Italy', 'Russia']), ['Team','Shooting Accuracy']])

#14. Which country is good at defense? (more interceptions)
print(df.iloc[df['Interceptions'].idxmax()])

#14. Which country is worst at defense? (more interceptions)
print(df.iloc[df['Interceptions'].idxmin()])

#15. Which country played more attacking game?
#max(df.iloc['Tackles'])
df[df.Tackles == df.Tackles.max()]

#16. Which country made more number of goal save? 
df[df['Goals conceded'] == df['Goals conceded'].max()]

#17. Which country has highest shooting accuracy?
df[df['Shooting Accuracy'] == df['Shooting Accuracy'].max()]

#18. List the teams in the order of goals scored.
df.sort_values(by=['Goals'], inplace = True) 
print(df)